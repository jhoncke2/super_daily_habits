// Mocks generated by Mockito 5.4.0 from annotations
// in super_daily_habits/test/features/today/domain/helpers/time_range_calificator_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:super_daily_habits/common/domain/custom_time_manager.dart'
    as _i3;
import 'package:super_daily_habits/features/today/domain/entities/custom_time.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCustomTime_0 extends _i1.SmartFake implements _i2.CustomTime {
  _FakeCustomTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CustomTimeManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomTimeManager extends _i1.Mock implements _i3.CustomTimeManager {
  MockCustomTimeManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CustomTime getTimeWithMinutesAdded(
    _i2.CustomTime? time,
    int? minutes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimeWithMinutesAdded,
          [
            time,
            minutes,
          ],
        ),
        returnValue: _FakeCustomTime_0(
          this,
          Invocation.method(
            #getTimeWithMinutesAdded,
            [
              time,
              minutes,
            ],
          ),
        ),
      ) as _i2.CustomTime);
}
